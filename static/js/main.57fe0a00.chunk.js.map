{"version":3,"sources":["assets/images/icon.png","api/EnApi.ts","stores/useCredsStore.ts","stores/useNodesStore.ts","stores/useTokenStore.ts","stores/useTransportStore.ts","containers/LoginPage.tsx","containers/RegisterPage.tsx","components/navigationComponent.tsx","containers/MainPage.tsx","components/nodeComponents.tsx","containers/NodeModal.tsx","containers/NodesPage.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","newPort","localStorage","getItem","newHostname","EnAPIhttp","EnAPI","transport","type","host","port","useUsername","createStore","_useState","useState","_useState2","Object","slicedToArray","username","setUsername","setItem","useNode","useToken","token","setToken","useHostname","hostname","setHostname","usePort","_useState3","_useState4","setPort","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","margin-right","LoginPage","props","_useUsername","_useUsername2","password","setPassword","_useToken","_useToken2","_useNode","_useNode2","nodes","setNodes","_useHostname","_useHostname2","_usePort","_usePort2","error","setError","_login","asyncToGenerator","regenerator_default","a","mark","_callee","event","authResult","wrap","_context","prev","next","preventDefault","length","login","sent","status","userName","history","push","abrupt","message","stop","apply","this","arguments","classes","react_default","createElement","Container","component","maxWidth","CssBaseline","className","Avatar","LockOutlined_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoFocus","placeholder","value","onChange","target","Button","onClick","go","color","_x","primary","RegisterPage","_useState5","_useState6","password2","setPassword2","_useState7","userRole","_useState9","_useState10","result","setResult","_useState11","_useState12","createUser","_ref","then","catch","VerifiedUser_default","react_router_dom","to","createStyles","root","flexGrow","menuButton","marginRight","title","appbar","background","menuButton2","border","height","NavigationBar","AppBar","position","Toolbar","IconButton","edge","arial-label","src","logo","alt","AccountBoxRounded_default","StorageSharp_default","MainPage","padding","NodeList","map","node","index","Grid","container","item","xs","Paper","key","nodeName","nodeId","nodeNetwork","version","clientversion","sync","Fragment","currentBlock","removeNodes","getModalStyle","top","concat","left","transform","NewNodeModal","boxShadow","shadows","formMultiGeth","showMultiGeth","clientButton","networkButton","setNodeName","_React$useState","React","modalStyle","_React$useState3","_React$useState4","open","setOpen","setMultiGeth","rpc","websocket","checkBox","setCheckBox","_useState8","radioValue","setRadioValue","handleCheckBox","objectSpread","defineProperty","checked","console","log","Modal","aria-labelledby","aria-describedby","onClose","style","fixed","borderBottom","disabled","RadioGroup","aria-label","row","FormControlLabel","control","Radio","labelPlacement","Checkbox","addNode","NodesPage","mounted","setMounted","getNodes","getUser","userInfoResult","ethRpcCall","versionResult","syncResult","clientVersionResult","_addNode","syncType","enableRpc","enableWS","addNodeResult","getUserInfo","_removeNodes","_callee2","containerId","removeData","removeNodeResult","_context2","removeNode","useEffect","nodeComponents","_x6","_x7","_x8","_x2","_x3","_x4","_x5","testNode","routing","react","dist","basename","react_router","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.57fe0a00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.d325b061.png\";","import EnAPI from \"@ethernodeio/enapi-client\";\n\nconst newPort: any = localStorage.getItem(\"port\");\nconst newHostname: any = localStorage.getItem(\"hostname\");\n\nexport const EnAPIhttp = new EnAPI({\n  transport: {\n    type: \"http\",\n    host: newHostname,\n    port: newPort,\n  },\n});\n","import { useState } from \"react\";\nimport { createStore } from \"reusable\";\n\nexport const useUsername = createStore(() => {\n  // tslint:disable-next-line: react-hooks-nesting\n  const [username, setUsername] = useState(localStorage.getItem(\"username\"));\n  // tslint:disable-next-line: no-shadowed-variable\n  const handleSetUsername = (username: string) => {\n    localStorage.setItem(\"username\", username);\n    return setUsername(username);\n  };\n  return [username, handleSetUsername];\n});\n","import { useState } from \"react\";\nimport { createStore } from \"reusable\";\n\n// tslint:disable-next-line: react-hooks-nesting\nexport const useNode = createStore(() => useState([]));\n","import { useState } from \"react\";\nimport { createStore } from \"reusable\";\n\nexport const useToken = createStore(() => {\n  // tslint:disable-next-line: react-hooks-nesting\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  // tslint:disable-next-line: no-shadowed-variable\n  const handleSetToken = (token: string) => {\n    localStorage.setItem(\"token\", token);\n    return setToken(token);\n  };\n  return [token, handleSetToken];\n});\n","import { useState } from \"react\";\nimport { createStore } from \"reusable\";\n\nexport const useHostname = createStore(() => {\n  // tslint:disable-next-line: react-hooks-nesting\n  const [hostname, setHostname] = useState(localStorage.getItem(\"hostname\"));\n  // tslint:disable-next-line: no-shadowed-variable\n  const handleSetHostname = (hostname: string) => {\n    localStorage.setItem(\"hostname\", hostname);\n    return setHostname(hostname);\n  };\n  return [hostname, handleSetHostname];\n});\n\nexport const usePort = createStore(() => {\n  // tslint:disable-next-line: react-hooks-nesting\n  const [port, setPort] = useState(localStorage.getItem(\"port\"));\n  // tslint:disable-next-line: no-shadowed-variable\n  const handleSetPort = (port: string) => {\n    localStorage.setItem(\"port\", port);\n    return setPort(port);\n  };\n  return [port, handleSetPort];\n});\n","import React, { useState } from \"react\";\nimport { EnAPIhttp } from \"../api/EnApi\";\nimport { useUsername } from \"../stores/useCredsStore\";\nimport { useNode } from \"../stores/useNodesStore\";\nimport { useToken } from \"../stores/useTokenStore\";\nimport { usePort, useHostname } from \"../stores/useTransportStore\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles((theme) => ({\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  \"paper\": {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  \"avatar\": {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  \"form\": {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  \"submit\": {\n    margin: theme.spacing(3, 0, 2),\n  },\n  \"host\": {\n    \"width\": \"150px\",\n    \"margin-right\": \"10px\",\n  },\n  \"port\": {\n    \"width\": \"100px\",\n    \"margin-right\": \"10px\",\n  },\n}));\n\ninterface IProps {\n  history: any;\n}\n\nconst LoginPage: React.FC<IProps> = (props) => {\n  const [username, setUsername] = useUsername();\n  const [password, setPassword] = useState(\"\");\n  const [token, setToken] = useToken();\n  const [nodes, setNodes] = useNode();\n  // const [transport, setTransport] = useTransport();\n  const [hostname, setHostname] = useHostname();\n  const [port, setPort] = usePort();\n  const [error, setError] = useState();\n\n  async function login(event: any) {\n    event.preventDefault();\n    if (username.length < 3 || password.length < 3) {\n      setError(\"Username or Password too short\");\n    } else {\n      const authResult = await EnAPIhttp.login(username, password);\n      if (authResult.status === \"success\") {\n        setUsername(authResult.userName);\n        setToken(authResult.token);\n        setNodes(authResult.nodes);\n        props.history.push(\"/main\");\n        return (token + nodes);\n      } else {\n        setError(authResult.message);\n      }\n    }\n  }\n  const classes = useStyles();\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"Username\"\n            label=\"Username\"\n            name=\"Username\"\n            autoFocus\n            placeholder=\"Username\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          Setup enApi host location<br />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            className={classes.host}\n            required\n            id=\"hostname\"\n            name=\"hostname\"\n            label=\"Host Name\"\n            placeholder=\"Enter enApi Address\"\n            value={hostname}\n            onChange={(event) => setHostname(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            className={classes.port}\n            required\n            id=\"port\"\n            name=\"port\"\n            label=\"port\"\n            placeholder=\"port\"\n            value={port}\n            onChange={(event) => setPort(event.target.value)}\n          />\n          <Button\n            onClick={() => props.history.go(0)}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            save\n          </Button>\n          <Button\n            onClick={(event) => { login(event); }}\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Login\n          </Button>\n          {error && <div>{error}</div>}\n        </form>\n      </div>\n    </Container >\n  );\n};\nexport default LoginPage;\n","import React, { useState } from \"react\";\nimport { EnAPIhttp } from \"../api/EnApi\";\nimport { usePort, useHostname } from \"../stores/useTransportStore\";\nimport { Link } from \"react-router-dom\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport VerifiedUser from \"@material-ui/icons/VerifiedUser\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\ninterface IProps {\n  history: any;\n}\nconst useStyles = makeStyles((theme) => ({\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  \"paper\": {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  \"avatar\": {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  \"form\": {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  \"submit\": {\n    margin: theme.spacing(3, 0, 2),\n  },\n  \"host\": {\n    \"width\": \"150px\",\n    \"margin-right\": \"10px\",\n  },\n  \"port\": {\n    \"width\": \"100px\",\n    \"margin-right\": \"10px\",\n  },\n}));\n\nconst RegisterPage: React.FC<IProps> = (props) => {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [password2, setPassword2] = useState();\n  const [userRole] = useState(\"admin\");\n  const [result, setResult] = useState();\n  const [error, setError] = useState();\n  const [hostname, setHostname] = useHostname();\n  const [port, setPort] = usePort();\n\n  const createUser = async (event: React.FormEvent) => {\n    event.preventDefault();\n    if (password === password2) {\n      EnAPIhttp.createUser(username, password, userRole)\n        .then((authResult: any) => {\n          setResult(authResult);\n          if (authResult.status === \"success\") {\n            props.history.push(\"/login\");\n          } else {\n            setError(result.message);\n          }\n        })\n        .catch(setError);\n    } else {\n      setError(\"Passwords don't Match\");\n    }\n  };\n\n  const classes = useStyles();\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <VerifiedUser />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Welcome to enUI User creation.\n      </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"Username\"\n            label=\"Username\"\n            name=\"Username\"\n            autoFocus\n            placeholder=\"Username\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            label=\"Password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"password\"\n            name=\"password2\"\n            id=\"password2\"\n            label=\"Repeat Password\"\n            placeholder=\"Repeat Password\"\n            value={password2}\n            onChange={(event) => setPassword2(event.target.value)}\n          />\n          Setup enApi host location<br />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            className={classes.host}\n            required\n            id=\"hostname\"\n            name=\"hostname\"\n            label=\"Host Name\"\n            placeholder=\"Enter enApi Address\"\n            value={hostname}\n            onChange={(event) => setHostname(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            className={classes.port}\n            required\n            id=\"port\"\n            name=\"port\"\n            label=\"port\"\n            placeholder=\"port\"\n            value={port}\n            onChange={(event) => setPort(event.target.value)}\n          />\n          <Button\n            onClick={() => props.history.go()}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            save\n          </Button>\n          <Button\n            onClick={(event) => { createUser(event); }}\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Register\n          </Button>\n          *Note: This form is only for first time users.<br />\n          Please go to the <Link to=\"/login\">Login</Link> page if you already have an account. <br />\n          Or contact your admin for a new one.<br />\n          {error && <div>{error}</div>}\n        </form>\n      </div>\n    </Container >\n  );\n};\n\nexport default RegisterPage;\n","import React from \"react\";\nimport logo from \"../assets/images/icon.png\";\nimport \"../index.css\";\nimport { Link } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBoxRounded\";\nimport NodeIcon from \"@material-ui/icons/StorageSharp\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    appbar: {\n      background: \"linear-gradient(45deg, #43a047 30%, #388e3c 90%)\",\n      color: \"#fff\",\n    },\n    menuButton2: {\n      border: 0,\n      color: \"white\",\n      height: 24,\n      margin: \"0 5px\",\n    },\n  }),\n);\n\ninterface IProps {\n  title: any;\n}\n\nexport function NavigationBar(props: IProps) {\n  const classes = useStyles();\n\n  return (\n    <nav className={classes.root}>\n      <AppBar position=\"static\" className={classes.appbar} >\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" arial-label=\"menu\">\n            <img src={logo} height=\"35\" alt=\"\" />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {props.title}\n          </Typography>\n          <Link to=\"/main\"><Button className={classes.menuButton2}><AccountBoxIcon /></Button></Link>\n          <Link to=\"/nodes\"><Button className={classes.menuButton2}><NodeIcon /></Button></Link>\n          <Link to=\"/login\"><Button className={classes.menuButton2}>Logout</Button></Link>\n        </Toolbar>\n      </AppBar>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { useUsername } from \"../stores/useCredsStore\";\nimport { NavigationBar } from \"../components/navigationComponent\";\n\nconst MainPage: React.FC = () => {\n  const [username] = useUsername();\n  return (\n    <div>\n      <NavigationBar title={\"Home - Welcome to enUI \" + username} />\n    </div>\n  );\n};\nexport default MainPage;\n","import React from \"react\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useNode } from \"../stores/useNodesStore\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(3, 2),\n      margin: theme.spacing(1, 3),\n    },\n  }),\n);\n\ninterface IProps {\n  removeNodes: any;\n}\n\nfunction NodeList(props: IProps) {\n  const [nodes] = useNode();\n  const classes = useStyles();\n\n  return (\n    nodes.map((node: { nodeId: any; nodeName: any; nodeNetwork: any, version: any, sync: any, clientversion: any }, index: any) => (\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <Paper className={classes.paper} key={index} id={index}>\n              Node Name: {node.nodeName}<br />\n              Node Container ID: {node.nodeId} <br />\n              Node Network: {node.nodeNetwork}<br />\n              Net version : {node.version}<br />\n              Client Version: {node.clientversion}<br />\n              Syncing: {node.sync && node.sync !== \"false\" ? <>CurrentBlock: {node.sync.currentBlock}</> : node.sync}<br />\n              <Button variant=\"contained\" onClick={() => props.removeNodes(node.nodeId, node.nodeName, true)}>Remove Node</Button>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    )));\n}\n\nexport default NodeList;\n","import React, { useState } from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\ninterface IProps {\n  addNode: any;\n  getNodes: any;\n  testNode: any;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nexport default function NewNodeModal(props: IProps) {\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      paper: {\n        position: \"absolute\",\n        width: 600,\n        backgroundColor: theme.palette.background.paper,\n        border: \"2px solid #000\",\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 4),\n      },\n      formMultiGeth: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n        display: showMultiGeth,\n      },\n      submit: {\n        margin: theme.spacing(3, 0, 2),\n      },\n      clientButton: {\n        margin: \"3px\",\n      },\n      networkButton: {\n        margin: \"3px\",\n      },\n    }),\n  );\n\n  // enUI hooks\n  const [nodeName, setNodeName] = useState();\n  // Form HOoks\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [showMultiGeth, setMultiGeth] = useState(\"none\");\n  const [checkBox, setCheckBox] = useState({\n    rpc: false,\n    websocket: false,\n  });\n  const [radioValue, setRadioValue] = useState(\"classic\");\n\n  const handleOpenModal = () => {\n    setOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n\n  const handleCheckBox = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCheckBox({ ...checkBox, [name]: event.target.checked });\n    console.log(\"rpc \" + checkBox.rpc);\n    console.log(\"ws \" + checkBox.websocket);\n  };\n  function handleRadioChange(event: React.ChangeEvent<unknown>) {\n    setRadioValue((event.target as HTMLInputElement).value);\n  }\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={handleOpenModal}\n      >\n        Add Node\n      </button>\n      <Modal\n        aria-labelledby=\"Add Node\"\n        aria-describedby=\"Spin up a Ethereum Node\"\n        open={open}\n        onClose={handleCloseModal}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <h2 id=\"simple-modal-title\">Spin up a Ethereum Node Client</h2>\n\n          <Container fixed>\n            <div style={{ borderBottom: \"1px solid #000000\" }}>\n              <h3>Select Node Client</h3>\n              <Button\n                className={classes.clientButton}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => setMultiGeth(\"\")}\n              >\n                Multi-Geth\n              </Button>\n              <Button\n                className={classes.clientButton}\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={true}\n                onClick={() => setMultiGeth(\"\")}\n              >\n                Parity\n              </Button>\n              <Button\n                className={classes.clientButton}\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={true}\n                onClick={() => setMultiGeth(\"\")}\n              >\n                Classic Geth\n              </Button>\n              <Button\n                className={classes.clientButton}\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={true}\n                onClick={() => setMultiGeth(\"\")}\n              >\n                Mantis\n              </Button>\n            </div>\n\n            <form className={classes.formMultiGeth} noValidate>\n              <h4>Multi-Geth Select Network</h4>\n              <RadioGroup aria-label=\"position\" name=\"position\" value={radioValue} onChange={handleRadioChange} row>\n                <FormControlLabel\n                  value=\"classic\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"ETC\"\n                  labelPlacement=\"top\"\n                />\n                <FormControlLabel\n                  value=\"kotti\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"Kotti\"\n                  labelPlacement=\"top\"\n                />\n              </RadioGroup>\n              <h4>Enable JSON-RPC</h4>\n              <FormControlLabel\n                control={<Checkbox checked={checkBox.rpc} onChange={handleCheckBox(\"rpc\")} value=\"false\" />}\n                label=\"Enable RPC http\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={checkBox.websocket} onChange={handleCheckBox(\"websocket\")} value=\"false\" />}\n                label=\"Enable RPC WS\"\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                autoFocus\n                name=\"nodename\"\n                id=\"nodename\"\n                label=\"Node Name\"\n                placeholder=\"Node Name\"\n                value={nodeName}\n                onChange={(event) => setNodeName(event.target.value)}\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={() => { props.addNode(nodeName, radioValue, \"fast\", checkBox.rpc, checkBox.websocket); }}\n              >\n                Create Node\n                </Button>\n            </form>\n          </Container>\n        </div>\n      </Modal>\n    </div >\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { useUsername } from \"../stores/useCredsStore\";\nimport { useNode } from \"../stores/useNodesStore\";\nimport { useToken } from \"../stores/useTokenStore\";\nimport { EnAPIhttp } from \"../api/EnApi\";\nimport { NavigationBar } from \"../components/navigationComponent\";\nimport NodeList from \"../components/nodeComponents\";\nimport NodeModal from \"./NodeModal\";\n\ninterface IProps {\n  history: any;\n}\n\nconst NodesPage: React.FC<IProps> = (props) => {\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      root: {\n        flexGrow: 1,\n      },\n    }),\n  );\n\n  const [username] = useUsername();\n  const [nodes, setNodes] = useNode();\n  const [token] = useToken();\n  const [mounted, setMounted] = useState(true);\n  const [result, setResult] = useState();\n  const classes = useStyles();\n\n  const getNodes = () => {\n    EnAPIhttp.getUser(token, username).then((userInfoResult) => {\n      setNodes(userInfoResult.nodes);\n      if (userInfoResult.nodes.length === 0) { setMounted(false); }\n      nodes.map((node: any, index: any) => {\n        EnAPIhttp.ethRpcCall(username, node.nodeName, node.nodeNetwork, \"net_version\", [], 67).then((versionResult) => {\n          // tslint:disable-next-line: no-string-literal\n          node.version = versionResult.result;\n          setNodes(nodes);\n        });\n        EnAPIhttp.ethRpcCall(username, node.nodeName, node.nodeNetwork, \"eth_syncing\", [], 67).then((syncResult) => {\n          if (syncResult.result !== false) {\n            // tslint:disable-next-line: no-string-literal\n            node.sync = syncResult.result;\n            setNodes(nodes);\n          } else {\n            node.sync = \"false\";\n            setNodes(nodes);\n          }\n          setMounted(false);\n        });\n        EnAPIhttp.ethRpcCall(username, node.nodeName, node.nodeNetwork, \"web3_clientVersion\", [], 67).then((clientVersionResult) => {\n          // tslint:disable-next-line: no-string-literal\n          node.clientversion = clientVersionResult.result;\n          setNodes(nodes);\n        });\n        return nodes;\n      });\n    });\n  };\n\n  useEffect(() => {\n    getNodes();\n    if (nodes.length === 0) { return; }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mounted && nodes]);\n\n  function testNode() {\n    console.log(\"hello from modal\");\n  }\n\n  async function addNode(nodeName: string, nodeNetwork: string, syncType: string, enableRpc: boolean, enableWS: boolean) {\n    const addNodeResult = await EnAPIhttp.addNode(token, username, nodeName, nodeNetwork, syncType, enableRpc, enableWS);\n    console.log(addNodeResult);\n    if (addNodeResult && addNodeResult.status === \"success\") {\n      const getUserInfo = await EnAPIhttp.getUser(token, username);\n      setNodes(getUserInfo.nodes);\n      setMounted(false);\n      // props.history.go(\"/nodes\");\n    } else {\n      console.log(addNodeResult.message);\n      setResult(addNodeResult.message);\n    }\n  }\n\n  async function removeNodes(containerId: string, nodeName: string, removeData: boolean) {\n    const removeNodeResult = await EnAPIhttp.removeNode(token, username, containerId, nodeName, removeData);\n    if (removeNodeResult && removeNodeResult.status === \"success\") {\n      const getUserInfo = await EnAPIhttp.getUser(token, username);\n      setNodes(getUserInfo.nodes);\n      setMounted(false);\n      props.history.push(\"/nodes\");\n    } else {\n      console.log(removeNodeResult.message);\n      setResult(removeNodeResult.message);\n    }\n  }\n\n  return (\n    <div className={classes.root} >\n      <NavigationBar title={\"Nodes - Hello \" + username + \" these are your running nodes: \"} />\n      {nodes ? <NodeList removeNodes={removeNodes} /> : < div > Loading Nodes</div>}\n      <NodeModal addNode={addNode} getNodes={getNodes} testNode={testNode} />\n      {result && <div>{result}</div>}\n    </div>\n  );\n};\nexport default NodesPage;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ReusableProvider } from \"reusable\";\nimport LoginPage from \"./containers/LoginPage\";\nimport RegisterPage from \"./containers/RegisterPage\";\nimport MainPage from \"./containers/MainPage\";\nimport NodesPage from \"./containers/NodesPage\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nconst routing = (\n  <ReusableProvider>\n    <BrowserRouter basename={\"/enui\"}>\n      <Switch>\n        <Route path=\"/main\" exact component={MainPage} />\n        <Route path=\"/login\" component={LoginPage} />\n        <Route path=\"/register\" component={RegisterPage} />\n        <Route path=\"/nodes\" component={NodesPage} />\n      </Switch>\n    </BrowserRouter>\n  </ReusableProvider>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n"],"sourceRoot":""}