{"version":3,"sources":["assets/images/icon.png","api/EnApi.ts","stores/useCredsStore.ts","stores/useNodesStore.ts","stores/useTokenStore.ts","stores/useTransportStore.ts","containers/LoginPage.tsx","containers/RegisterPage.tsx","components/navigationComponent.tsx","containers/MainPage.tsx","components/nodeComponents.tsx","containers/NodeModal.tsx","containers/NodesPage.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","newPort","localStorage","getItem","newHostname","EnAPIhttp","EnAPI","transport","type","host","port","useUsername","createStore","_useState","useState","_useState2","Object","slicedToArray","username","setUsername","setItem","useNode","useToken","token","setToken","useHostname","hostname","setHostname","usePort","_useState3","_useState4","setPort","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","margin-right","LoginPage","props","_useUsername","_useUsername2","password","setPassword","_useToken","_useNode","setNodes","_useHostname","_useHostname2","_usePort","_usePort2","error","setError","_login","asyncToGenerator","regenerator_default","a","mark","_callee","event","authResult","wrap","_context","prev","next","preventDefault","length","login","sent","status","userName","nodes","history","push","message","stop","apply","this","arguments","useEffect","classes","react_default","createElement","Container","component","maxWidth","CssBaseline","className","Avatar","LockOutlined_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoFocus","placeholder","value","onChange","target","Button","onClick","go","color","_x","primary","RegisterPage","_useState5","_useState6","password2","setPassword2","_useState7","userRole","_useState9","_useState10","result","setResult","_useState11","_useState12","createUser","_ref","then","catch","VerifiedUser_default","react_router_dom","to","createStyles","root","flexGrow","menuButton","marginRight","title","appbar","background","menuButton2","border","height","NavigationBar","AppBar","position","Toolbar","IconButton","edge","arial-label","src","logo","alt","AccountBoxRounded_default","StorageSharp_default","MainPage","padding","NodeList","map","node","index","Grid","container","item","xs","Paper","key","nodeName","nodeId","nodeNetwork","version","clientversion","sync","Fragment","currentBlock","removeNodes","getModalStyle","top","concat","left","transform","NewNodeModal","boxShadow","shadows","formMultiGeth","showMultiGeth","clientButton","networkButton","setNodeName","_React$useState","React","modalStyle","_React$useState3","_React$useState4","open","setOpen","setMultiGeth","rpc","websocket","checkBox","setCheckBox","_useState8","radioValue","setRadioValue","handleCheckBox","objectSpread","defineProperty","checked","console","log","Modal","aria-labelledby","aria-describedby","onClose","style","fixed","borderBottom","disabled","RadioGroup","aria-label","row","FormControlLabel","control","Radio","labelPlacement","Checkbox","addNode","NodesPage","_useNode2","mounted","setMounted","getNodes","getUser","userInfoResult","ethRpcCall","versionResult","syncResult","clientVersionResult","_addNode","syncType","enableRpc","enableWS","addNodeResult","getUserInfo","_removeNodes","_callee2","containerId","removeData","removeNodeResult","_context2","removeNode","nodeComponents","_x6","_x7","_x8","_x2","_x3","_x4","_x5","testNode","routing","react","dist","react_router","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e5c8efc8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.d325b061.png\";","import EnAPI from \"@ethernodeio/enapi-client\";\n\nconst newPort: any = localStorage.getItem(\"port\");\nconst newHostname: any = localStorage.getItem(\"hostname\");\n\nexport const EnAPIhttp = new EnAPI({\n  transport: {\n    type: \"http\",\n    host: newHostname,\n    port: newPort,\n  },\n});\n","import { useState } from \"react\";\nimport { createStore } from \"reusable\";\n\nexport const useUsername = createStore(() => {\n  // tslint:disable-next-line: react-hooks-nesting\n  const [username, setUsername] = useState(localStorage.getItem(\"username\"));\n  // tslint:disable-next-line: no-shadowed-variable\n  const handleSetUsername = (username: string) => {\n    localStorage.setItem(\"username\", username);\n    return setUsername(username);\n  };\n  return [username, handleSetUsername];\n});\n","import { useState } from \"react\";\nimport { createStore } from \"reusable\";\n\n// tslint:disable-next-line: react-hooks-nesting\nexport const useNode = createStore(() => useState([]));\n","import { useState } from \"react\";\nimport { createStore } from \"reusable\";\n\nexport const useToken = createStore(() => {\n  // tslint:disable-next-line: react-hooks-nesting\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  // tslint:disable-next-line: no-shadowed-variable\n  const handleSetToken = (token: string) => {\n    localStorage.setItem(\"token\", token);\n    return setToken(token);\n  };\n  return [token, handleSetToken];\n});\n","import { useState } from \"react\";\nimport { createStore } from \"reusable\";\n\nexport const useHostname = createStore(() => {\n  // tslint:disable-next-line: react-hooks-nesting\n  const [hostname, setHostname] = useState(localStorage.getItem(\"hostname\"));\n  // tslint:disable-next-line: no-shadowed-variable\n  const handleSetHostname = (hostname: string) => {\n    localStorage.setItem(\"hostname\", hostname);\n    return setHostname(hostname);\n  };\n  return [hostname, handleSetHostname];\n});\n\nexport const usePort = createStore(() => {\n  // tslint:disable-next-line: react-hooks-nesting\n  const [port, setPort] = useState(localStorage.getItem(\"port\"));\n  // tslint:disable-next-line: no-shadowed-variable\n  const handleSetPort = (port: string) => {\n    localStorage.setItem(\"port\", port);\n    return setPort(port);\n  };\n  return [port, handleSetPort];\n});\n","import React, { useState, useEffect } from \"react\";\nimport { EnAPIhttp } from \"../api/EnApi\";\nimport { useUsername } from \"../stores/useCredsStore\";\nimport { useNode } from \"../stores/useNodesStore\";\nimport { useToken } from \"../stores/useTokenStore\";\nimport { usePort, useHostname } from \"../stores/useTransportStore\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles((theme) => ({\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  \"paper\": {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  \"avatar\": {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  \"form\": {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  \"submit\": {\n    margin: theme.spacing(3, 0, 2),\n  },\n  \"host\": {\n    \"width\": \"150px\",\n    \"margin-right\": \"10px\",\n  },\n  \"port\": {\n    \"width\": \"100px\",\n    \"margin-right\": \"10px\",\n  },\n}));\n\ninterface IProps {\n  history: any;\n}\n\nconst LoginPage: React.FC<IProps> = (props) => {\n  const [username, setUsername] = useUsername();\n  const [password, setPassword] = useState(\"\");\n  const [setToken] = useToken();\n  const [setNodes] = useNode();\n  // const [transport, setTransport] = useTransport();\n  const [hostname, setHostname] = useHostname();\n  const [port, setPort] = usePort();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    setUsername(\"\");\n    setToken(\"\");\n    setNodes([]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function login(event: any) {\n    event.preventDefault();\n    if (username.length < 3 || password.length < 3) {\n      setError(\"Username or Password too short\");\n    } else {\n      const authResult = await EnAPIhttp.login(username, password);\n      if (authResult.status === \"success\") {\n        setUsername(authResult.userName);\n        setToken(authResult.token);\n        setNodes(authResult.nodes);\n        props.history.push(\"/\");\n      } else {\n        setError(authResult.message);\n      }\n    }\n  }\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"Username\"\n            label=\"Username\"\n            name=\"Username\"\n            autoFocus\n            placeholder=\"Username\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          Setup enApi host location<br />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            className={classes.host}\n            required\n            id=\"hostname\"\n            name=\"hostname\"\n            label=\"Host Name\"\n            placeholder=\"Enter enApi Address\"\n            value={hostname}\n            onChange={(event) => setHostname(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            className={classes.port}\n            required\n            id=\"port\"\n            name=\"port\"\n            label=\"port\"\n            placeholder=\"port\"\n            value={port}\n            onChange={(event) => setPort(event.target.value)}\n          />\n          <Button\n            onClick={() => props.history.go()}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            save\n          </Button>\n          <Button\n            onClick={(event) => { login(event); }}\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Login\n          </Button>\n          {error && <div>{error}</div>}\n        </form>\n      </div>\n    </Container >\n  );\n};\nexport default LoginPage;\n","import React, { useState } from \"react\";\nimport { EnAPIhttp } from \"../api/EnApi\";\nimport { usePort, useHostname } from \"../stores/useTransportStore\";\nimport { Link } from \"react-router-dom\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport VerifiedUser from \"@material-ui/icons/VerifiedUser\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\ninterface IProps {\n  history: any;\n}\nconst useStyles = makeStyles((theme) => ({\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  \"paper\": {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  \"avatar\": {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  \"form\": {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  \"submit\": {\n    margin: theme.spacing(3, 0, 2),\n  },\n  \"host\": {\n    \"width\": \"150px\",\n    \"margin-right\": \"10px\",\n  },\n  \"port\": {\n    \"width\": \"100px\",\n    \"margin-right\": \"10px\",\n  },\n}));\n\nconst RegisterPage: React.FC<IProps> = (props) => {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [password2, setPassword2] = useState();\n  const [userRole] = useState(\"admin\");\n  const [result, setResult] = useState();\n  const [error, setError] = useState();\n  const [hostname, setHostname] = useHostname();\n  const [port, setPort] = usePort();\n\n  const createUser = async (event: React.FormEvent) => {\n    event.preventDefault();\n    if (password === password2) {\n      EnAPIhttp.createUser(username, password, userRole)\n        .then((authResult: any) => {\n          setResult(authResult);\n          if (authResult.status === \"success\") {\n            props.history.push(\"/login\");\n          } else {\n            setError(result.message);\n          }\n        })\n        .catch(setError);\n    } else {\n      setError(\"Passwords don't Match\");\n    }\n  };\n\n  const classes = useStyles();\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <VerifiedUser />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Welcome to enUI User creation.\n      </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"Username\"\n            label=\"Username\"\n            name=\"Username\"\n            autoFocus\n            placeholder=\"Username\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            label=\"Password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"password\"\n            name=\"password2\"\n            id=\"password2\"\n            label=\"Repeat Password\"\n            placeholder=\"Repeat Password\"\n            value={password2}\n            onChange={(event) => setPassword2(event.target.value)}\n          />\n          Setup enApi host location<br />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            className={classes.host}\n            required\n            id=\"hostname\"\n            name=\"hostname\"\n            label=\"Host Name\"\n            placeholder=\"Enter enApi Address\"\n            value={hostname}\n            onChange={(event) => setHostname(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            className={classes.port}\n            required\n            id=\"port\"\n            name=\"port\"\n            label=\"port\"\n            placeholder=\"port\"\n            value={port}\n            onChange={(event) => setPort(event.target.value)}\n          />\n          <Button\n            onClick={() => props.history.go()}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            save\n          </Button>\n          <Button\n            onClick={(event) => { createUser(event); }}\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Register\n          </Button>\n          *Note: This form is only for first time users.<br />\n          Please go to the <Link to=\"/login\">Login</Link> page if you already have an account. <br />\n          Or contact your admin for a new one.<br />\n          {error && <div>{error}</div>}\n        </form>\n      </div>\n    </Container >\n  );\n};\n\nexport default RegisterPage;\n","import React from \"react\";\nimport logo from \"../assets/images/icon.png\";\nimport \"../index.css\";\nimport { Link } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBoxRounded\";\nimport NodeIcon from \"@material-ui/icons/StorageSharp\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    appbar: {\n      background: \"linear-gradient(45deg, #43a047 30%, #388e3c 90%)\",\n      color: \"#fff\",\n    },\n    menuButton2: {\n      border: 0,\n      color: \"white\",\n      height: 24,\n      margin: \"0 5px\",\n    },\n  }),\n);\n\ninterface IProps {\n  title: any;\n}\n\nexport function NavigationBar(props: IProps) {\n  const classes = useStyles();\n\n  return (\n    <nav className={classes.root}>\n      <AppBar position=\"static\" className={classes.appbar} >\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" arial-label=\"menu\">\n            <img src={logo} height=\"35\" alt=\"\" />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {props.title}\n          </Typography>\n          <Link to=\"/\"><Button className={classes.menuButton2}><AccountBoxIcon /></Button></Link>\n          <Link to=\"/nodes\"><Button className={classes.menuButton2}><NodeIcon /></Button></Link>\n          <Link to=\"/login\"><Button className={classes.menuButton2}>Logout</Button></Link>\n        </Toolbar>\n      </AppBar>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { useUsername } from \"../stores/useCredsStore\";\nimport { NavigationBar } from \"../components/navigationComponent\";\n\nconst MainPage: React.FC = () => {\n  const [username] = useUsername();\n  return (\n    <div>\n      <NavigationBar title={\"Home - Welcome to enUI \" + username} />\n    </div>\n  );\n};\nexport default MainPage;\n","import React from \"react\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useNode } from \"../stores/useNodesStore\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(3, 2),\n      margin: theme.spacing(1, 3),\n    },\n  }),\n);\n\ninterface IProps {\n  removeNodes: any;\n}\n\nfunction NodeList(props: IProps) {\n  const [nodes] = useNode();\n  const classes = useStyles();\n\n  return (\n    nodes.map((node: { nodeId: any; nodeName: any; nodeNetwork: any, version: any, sync: any, clientversion: any }, index: any) => (\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <Paper className={classes.paper} key={index} id={index}>\n              Node Name: {node.nodeName}<br />\n              Node Container ID: {node.nodeId} <br />\n              Node Network: {node.nodeNetwork}<br />\n              Net version : {node.version}<br />\n              Client Version: {node.clientversion}<br />\n              Syncing: {node.sync && node.sync !== \"false\" ? <>CurrentBlock: {node.sync.currentBlock}</> : node.sync}<br />\n              <Button variant=\"contained\" onClick={() => props.removeNodes(node.nodeId, node.nodeName, true)}>Remove Node</Button>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    )));\n}\n\nexport default NodeList;\n","import React, { useState } from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\ninterface IProps {\n  addNode: any;\n  getNodes: any;\n  testNode: any;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nexport default function NewNodeModal(props: IProps) {\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      paper: {\n        position: \"absolute\",\n        width: 600,\n        backgroundColor: theme.palette.background.paper,\n        border: \"2px solid #000\",\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 4),\n      },\n      formMultiGeth: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n        display: showMultiGeth,\n      },\n      submit: {\n        margin: theme.spacing(3, 0, 2),\n      },\n      clientButton: {\n        margin: \"3px\",\n      },\n      networkButton: {\n        margin: \"3px\",\n      },\n    }),\n  );\n\n  // enUI hooks\n  const [nodeName, setNodeName] = useState();\n  // Form HOoks\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [showMultiGeth, setMultiGeth] = useState(\"none\");\n  const [checkBox, setCheckBox] = useState({\n    rpc: false,\n    websocket: false,\n  });\n  const [radioValue, setRadioValue] = useState(\"classic\");\n\n  const handleOpenModal = () => {\n    setOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n\n  const handleCheckBox = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCheckBox({ ...checkBox, [name]: event.target.checked });\n    console.log(\"rpc \" + checkBox.rpc);\n    console.log(\"ws \" + checkBox.websocket);\n  };\n  function handleRadioChange(event: React.ChangeEvent<unknown>) {\n    setRadioValue((event.target as HTMLInputElement).value);\n  }\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={handleOpenModal}\n      >\n        Add Node\n      </button>\n      <Modal\n        aria-labelledby=\"Add Node\"\n        aria-describedby=\"Spin up a Ethereum Node\"\n        open={open}\n        onClose={handleCloseModal}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <h2 id=\"simple-modal-title\">Spin up a Ethereum Node Client</h2>\n\n          <Container fixed>\n            <div style={{ borderBottom: \"1px solid #000000\" }}>\n              <h3>Select Node Client</h3>\n              <Button\n                className={classes.clientButton}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => setMultiGeth(\"\")}\n              >\n                Multi-Geth\n              </Button>\n              <Button\n                className={classes.clientButton}\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={true}\n                onClick={() => setMultiGeth(\"\")}\n              >\n                Parity\n              </Button>\n              <Button\n                className={classes.clientButton}\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={true}\n                onClick={() => setMultiGeth(\"\")}\n              >\n                Classic Geth\n              </Button>\n              <Button\n                className={classes.clientButton}\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={true}\n                onClick={() => setMultiGeth(\"\")}\n              >\n                Mantis\n              </Button>\n            </div>\n\n            <form className={classes.formMultiGeth} noValidate>\n              <h4>Multi-Geth Select Network</h4>\n              <RadioGroup aria-label=\"position\" name=\"position\" value={radioValue} onChange={handleRadioChange} row>\n                <FormControlLabel\n                  value=\"classic\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"ETC\"\n                  labelPlacement=\"top\"\n                />\n                <FormControlLabel\n                  value=\"kotti\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"Kotti\"\n                  labelPlacement=\"top\"\n                />\n              </RadioGroup>\n              <h4>Enable JSON-RPC</h4>\n              <FormControlLabel\n                control={<Checkbox checked={checkBox.rpc} onChange={handleCheckBox(\"rpc\")} value=\"false\" />}\n                label=\"Enable RPC http\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={checkBox.websocket} onChange={handleCheckBox(\"websocket\")} value=\"false\" />}\n                label=\"Enable RPC WS\"\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                autoFocus\n                name=\"nodename\"\n                id=\"nodename\"\n                label=\"Node Name\"\n                placeholder=\"Node Name\"\n                value={nodeName}\n                onChange={(event) => setNodeName(event.target.value)}\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={() => { props.addNode(nodeName, radioValue, \"fast\", checkBox.rpc, checkBox.websocket); }}\n              >\n                Create Node\n                </Button>\n            </form>\n          </Container>\n        </div>\n      </Modal>\n    </div >\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { useUsername } from \"../stores/useCredsStore\";\nimport { useNode } from \"../stores/useNodesStore\";\nimport { useToken } from \"../stores/useTokenStore\";\nimport { EnAPIhttp } from \"../api/EnApi\";\nimport { NavigationBar } from \"../components/navigationComponent\";\nimport NodeList from \"../components/nodeComponents\";\nimport NodeModal from \"./NodeModal\";\n\ninterface IProps {\n  history: any;\n}\n\nconst NodesPage: React.FC<IProps> = (props) => {\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      root: {\n        flexGrow: 1,\n      },\n    }),\n  );\n\n  const [username] = useUsername();\n  const [nodes, setNodes] = useNode();\n  const [token] = useToken();\n  const [mounted, setMounted] = useState(true);\n  const [result, setResult] = useState();\n  const classes = useStyles();\n\n  const getNodes = () => {\n    EnAPIhttp.getUser(token, username).then((userInfoResult) => {\n      setNodes(userInfoResult.nodes);\n      if (userInfoResult.nodes.length === 0) { setMounted(false); }\n      nodes.map((node: any, index: any) => {\n        EnAPIhttp.ethRpcCall(username, node.nodeName, node.nodeNetwork, \"net_version\", [], 67).then((versionResult) => {\n          // tslint:disable-next-line: no-string-literal\n          node.version = versionResult.result;\n          setNodes(nodes);\n        });\n        EnAPIhttp.ethRpcCall(username, node.nodeName, node.nodeNetwork, \"eth_syncing\", [], 67).then((syncResult) => {\n          if (syncResult.result !== false) {\n            // tslint:disable-next-line: no-string-literal\n            node.sync = syncResult.result;\n            setNodes(nodes);\n          } else {\n            node.sync = \"false\";\n            setNodes(nodes);\n          }\n          setMounted(false);\n        });\n        EnAPIhttp.ethRpcCall(username, node.nodeName, node.nodeNetwork, \"web3_clientVersion\", [], 67).then((clientVersionResult) => {\n          // tslint:disable-next-line: no-string-literal\n          node.clientversion = clientVersionResult.result;\n          setNodes(nodes);\n        });\n        return nodes;\n      });\n    });\n  };\n\n  useEffect(() => {\n    getNodes();\n    if (nodes.length === 0) { return; }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mounted && nodes]);\n\n  function testNode() {\n    console.log(\"hello from modal\");\n  }\n\n  async function addNode(nodeName: string, nodeNetwork: string, syncType: string, enableRpc: boolean, enableWS: boolean) {\n    const addNodeResult = await EnAPIhttp.addNode(token, username, nodeName, nodeNetwork, syncType, enableRpc, enableWS);\n    console.log(addNodeResult);\n    if (addNodeResult && addNodeResult.status === \"success\") {\n      const getUserInfo = await EnAPIhttp.getUser(token, username);\n      setNodes(getUserInfo.nodes);\n      setMounted(false);\n      // props.history.go(\"/nodes\");\n    } else {\n      console.log(addNodeResult.message);\n      setResult(addNodeResult.message);\n    }\n  }\n\n  async function removeNodes(containerId: string, nodeName: string, removeData: boolean) {\n    const removeNodeResult = await EnAPIhttp.removeNode(token, username, containerId, nodeName, removeData);\n    if (removeNodeResult && removeNodeResult.status === \"success\") {\n      const getUserInfo = await EnAPIhttp.getUser(token, username);\n      setNodes(getUserInfo.nodes);\n      setMounted(false);\n      props.history.go(\"/nodes\");\n    } else {\n      console.log(removeNodeResult.message);\n      setResult(removeNodeResult.message);\n    }\n  }\n\n  return (\n    <div className={classes.root} >\n      <NavigationBar title={\"Nodes - Hello \" + username + \" these are your running nodes: \"} />\n      {nodes ? <NodeList removeNodes={removeNodes} /> : < div > Loading Nodes</div>}\n      <NodeModal addNode={addNode} getNodes={getNodes} testNode={testNode} />\n      {result && <div>{result}</div>}\n    </div>\n  );\n};\nexport default NodesPage;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ReusableProvider } from \"reusable\";\nimport LoginPage from \"./containers/LoginPage\";\nimport RegisterPage from \"./containers/RegisterPage\";\nimport MainPage from \"./containers/MainPage\";\nimport NodesPage from \"./containers/NodesPage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst routing = (\n  <ReusableProvider>\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={MainPage} />\n        <Route path=\"/login\" component={LoginPage} />\n        <Route path=\"/register\" component={RegisterPage} />\n        <Route path=\"/nodes\" component={NodesPage} />\n      </Switch>\n    </Router>\n  </ReusableProvider>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n"],"sourceRoot":""}