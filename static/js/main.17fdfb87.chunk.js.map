{"version":3,"sources":["assets/images/icon.png","api/EnApi.ts","stores/useCredsStore.ts","stores/useNodesStore.ts","stores/useTokenStore.ts","stores/useTransportStore.ts","containers/LoginPage.tsx","containers/RegisterPage.tsx","components/navigationComponent.tsx","containers/MainPage.tsx","components/nodeComponents.tsx","containers/NodeModal.tsx","containers/NodesPage.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","newPort","localStorage","getItem","newHostname","EnAPIhttp","EnAPI","transport","type","host","port","useUsername","createStore","_useState","useState","_useState2","Object","slicedToArray","username","setUsername","setItem","useNode","useToken","token","setToken","useHostname","hostname","setHostname","usePort","_useState3","_useState4","setPort","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","margin-right","LoginPage","props","_useUsername","_useUsername2","password","setPassword","_useNode","_useNode2","setNodes","_useToken","_useToken2","_useHostname","_useHostname2","_usePort","_usePort2","_useState5","_useState6","error","setError","_login","asyncToGenerator","regenerator_default","a","mark","_callee","event","authResult","wrap","_context","prev","next","preventDefault","length","login","sent","status","userName","nodes","history","push","message","stop","apply","this","arguments","useEffect","classes","react_default","createElement","Container","component","maxWidth","CssBaseline","className","Avatar","LockOutlined_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoFocus","placeholder","value","onChange","target","Button","onClick","go","color","_x","RegisterPage","password2","setPassword2","_useState7","_useState8","userRole","_useState9","_useState10","setResult","_useState11","_useState12","createUser","_ref","then","catch","onSubmit","htmlFor","createStyles","root","flexGrow","menuButton","marginRight","title","appbar","background","menuButton2","border","height","NavigationBar","AppBar","position","Toolbar","IconButton","edge","arial-label","src","logo","react_router_dom","to","AccountBoxRounded_default","StorageSharp_default","MainPage","padding","NodeList","map","node","index","Grid","container","item","xs","Paper","key","nodeName","nodeId","nodeNetwork","version","clientversion","sync","Fragment","currentBlock","removeNodes","getModalStyle","top","concat","left","transform","NewNodeModal","boxShadow","shadows","formMultiGeth","showMultiGeth","clientButton","networkButton","setNodeName","_React$useState","React","modalStyle","_React$useState3","_React$useState4","open","setOpen","setMultiGeth","rpc","websocket","checkBox","setCheckBox","radioValue","setRadioValue","handleCheckBox","objectSpread","defineProperty","checked","console","log","Modal","aria-labelledby","aria-describedby","onClose","style","fixed","borderBottom","disabled","RadioGroup","aria-label","row","FormControlLabel","control","Radio","labelPlacement","Checkbox","addNode","NodesPage","mounted","setMounted","result","_addNode","syncType","enableRpc","enableWS","addNodeResult","getUserInfo","getUser","_removeNodes","_callee2","containerId","removeData","removeNodeResult","_context2","removeNode","getNodes","userInfoResult","ethRpcCall","versionResult","syncResult","clientVersionResult","nodeComponents","_x6","_x7","_x8","_x2","_x3","_x4","_x5","testNode","routing","react","dist","react_router","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.17fdfb87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.d325b061.png\";","import EnAPI from \"@ethernodeio/enapi-client\";\n\nconst newPort: any = localStorage.getItem(\"port\");\nconst newHostname: any = localStorage.getItem(\"hostname\");\n\nexport const EnAPIhttp = new EnAPI({\n  transport: {\n    type: \"http\",\n    host: newHostname,\n    port: newPort,\n  },\n});\n","import { useState } from \"react\";\nimport { createStore } from \"reusable\";\n\nexport const useUsername = createStore(() => {\n  // tslint:disable-next-line: react-hooks-nesting\n  const [username, setUsername] = useState(localStorage.getItem(\"username\"));\n  // tslint:disable-next-line: no-shadowed-variable\n  const handleSetUsername = (username: string) => {\n    localStorage.setItem(\"username\", username);\n    return setUsername(username);\n  };\n  return [username, handleSetUsername];\n});\n","import { useState } from \"react\";\nimport { createStore } from \"reusable\";\n\n// tslint:disable-next-line: react-hooks-nesting\nexport const useNode = createStore(() => useState([]));\n","import { useState } from \"react\";\nimport { createStore } from \"reusable\";\n\nexport const useToken = createStore(() => {\n  // tslint:disable-next-line: react-hooks-nesting\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  // tslint:disable-next-line: no-shadowed-variable\n  const handleSetToken = (token: string) => {\n    localStorage.setItem(\"token\", token);\n    return setToken(token);\n  };\n  return [token, handleSetToken];\n});\n","import { useState } from \"react\";\nimport { createStore } from \"reusable\";\n\nexport const useHostname = createStore(() => {\n  // tslint:disable-next-line: react-hooks-nesting\n  const [hostname, setHostname] = useState(localStorage.getItem(\"hostname\"));\n  // tslint:disable-next-line: no-shadowed-variable\n  const handleSetHostname = (hostname: string) => {\n    localStorage.setItem(\"hostname\", hostname);\n    return setHostname(hostname);\n  };\n  return [hostname, handleSetHostname];\n});\n\nexport const usePort = createStore(() => {\n  // tslint:disable-next-line: react-hooks-nesting\n  const [port, setPort] = useState(localStorage.getItem(\"port\"));\n  // tslint:disable-next-line: no-shadowed-variable\n  const handleSetPort = (port: string) => {\n    localStorage.setItem(\"port\", port);\n    return setPort(port);\n  };\n  return [port, handleSetPort];\n});\n","import React, { useState, useEffect } from \"react\";\nimport { EnAPIhttp } from \"../api/EnApi\";\nimport { useUsername } from \"../stores/useCredsStore\";\nimport { useNode } from \"../stores/useNodesStore\";\nimport { useToken } from \"../stores/useTokenStore\";\nimport { usePort, useHostname } from \"../stores/useTransportStore\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles((theme) => ({\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  \"paper\": {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  \"avatar\": {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  \"form\": {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  \"submit\": {\n    margin: theme.spacing(3, 0, 2),\n  },\n  \"host\": {\n    \"width\": \"150px\",\n    \"margin-right\": \"10px\",\n  },\n  \"port\": {\n    \"width\": \"100px\",\n    \"margin-right\": \"10px\",\n  },\n}));\n\ninterface IProps {\n  history: any;\n}\n\nconst LoginPage: React.FC<IProps> = (props) => {\n  const [username, setUsername] = useUsername();\n  const [password, setPassword] = useState(\"\");\n  const [nodes, setNodes] = useNode();\n  const [token, setToken] = useToken();\n  // const [transport, setTransport] = useTransport();\n  const [hostname, setHostname] = useHostname();\n  const [port, setPort] = usePort();\n  const [result, setResult] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    setUsername(\"\");\n    setToken(\"\");\n    setNodes([]);\n  }, []);\n\n  async function login(event: any) {\n    event.preventDefault();\n    if (username.length < 3 || password.length < 3) {\n      setError(\"Username or Password too short\");\n    } else {\n      const authResult = await EnAPIhttp.login(username, password);\n      if (authResult.status === \"success\") {\n        setUsername(authResult.userName);\n        setToken(authResult.token);\n        setNodes(authResult.nodes);\n        props.history.push(\"/\");\n      } else {\n        setError(authResult.message);\n      }\n    }\n  }\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"Username\"\n            label=\"Username\"\n            name=\"Username\"\n            autoFocus\n            placeholder=\"Username\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            className={classes.host}\n            required\n            id=\"hostname\"\n            name=\"hostname\"\n            label=\"Host Name\"\n            placeholder=\"Enter enApi Address\"\n            value={hostname}\n            onChange={(event) => setHostname(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            className={classes.port}\n            required\n            id=\"port\"\n            name=\"port\"\n            label=\"port\"\n            placeholder=\"port\"\n            value={port}\n            onChange={(event) => setPort(event.target.value)}\n          />\n          <Button\n            onClick={() => props.history.go(\"/nodes\")}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            save\n          </Button>\n          <Button\n            onClick={(event) => { login(event); }}\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Login\n          </Button>\n          {error && <div>{error}</div>}\n        </form>\n      </div>\n    </Container >\n  );\n};\nexport default LoginPage;\n","import React, { useState } from \"react\";\nimport { EnAPIhttp } from \"../api/EnApi\";\n\ninterface IProps {\n  history: any;\n}\n\nconst RegisterPage: React.FC<IProps> = (props) => {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [password2, setPassword2] = useState();\n  const [userRole, setUserRole] = useState(\"admin\");\n  const [result, setResult] = useState();\n  const [error, setError] = useState();\n\n  const createUser = async (event: React.FormEvent) => {\n    event.preventDefault();\n    if (password === password2) {\n      EnAPIhttp.createUser(username, password, userRole)\n        .then((authResult: any) => {\n          setResult(authResult);\n          if (authResult.status === \"success\") {\n            props.history.push(\"/login\");\n          } else {\n            setError(authResult.message);\n          }\n        })\n        .catch(setError);\n    } else {\n      setError(\"Passwords don't Match\");\n    }\n  };\n  return (\n    <form onSubmit={createUser}>\n      <label htmlFor=\"userName\">Username</label>\n      <input type=\"text\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(event) => setUsername(event.target.value)}\n      />\n      <label htmlFor=\"password\">Password</label>\n      <input type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n      />\n      <label htmlFor=\"password2\">Repeat Password</label>\n      <input type=\"password\"\n        placeholder=\"Repeat Password\"\n        value={password2}\n        onChange={(event) => setPassword2(event.target.value)}\n      />\n      <button type=\"submit\">Register</button>\n      {error && <div>{error}</div>}\n    </form>\n  );\n};\n\nexport default RegisterPage;\n","import React from \"react\";\nimport logo from \"../assets/images/icon.png\";\nimport \"../index.css\";\nimport { Link } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBoxRounded\";\nimport NodeIcon from \"@material-ui/icons/StorageSharp\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    appbar: {\n      background: \"linear-gradient(45deg, #43a047 30%, #388e3c 90%)\",\n      color: \"#fff\",\n    },\n    menuButton2: {\n      border: 0,\n      color: \"white\",\n      height: 24,\n      margin: \"0 5px\",\n    },\n  }),\n);\n\ninterface IProps {\n  title: any;\n}\n\nexport function NavigationBar(props: IProps) {\n  const classes = useStyles();\n\n  return (\n    <nav className={classes.root}>\n      <AppBar position=\"static\" className={classes.appbar} >\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" arial-label=\"menu\">\n            <img src={logo} height=\"35\" />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {props.title}\n          </Typography>\n          <Link to=\"/\"><Button className={classes.menuButton2}><AccountBoxIcon /></Button></Link>\n          <Link to=\"/nodes\"><Button className={classes.menuButton2}><NodeIcon /></Button></Link>\n          <Link to=\"/login\"><Button className={classes.menuButton2}>Logout</Button></Link>\n        </Toolbar>\n      </AppBar>\n    </nav>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useUsername } from \"../stores/useCredsStore\";\nimport { useToken } from \"../stores/useTokenStore\";\nimport { useNode } from \"../stores/useNodesStore\";\nimport { NavigationBar } from \"../components/navigationComponent\";\n\nconst MainPage: React.FC = () => {\n  const [username, setUsername] = useUsername();\n  const [token, setToken] = useToken();\n  const [nodes, setNodes] = useNode();\n\n  return (\n    <div>\n      <NavigationBar title={\"Home - Welcome to enUI \" + username} />\n    </div>\n  );\n};\nexport default MainPage;\n","import React from \"react\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useNode } from \"../stores/useNodesStore\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(3, 2),\n      margin: theme.spacing(1, 3),\n    },\n  }),\n);\n\ninterface IProps {\n  removeNodes: any;\n}\n\nfunction NodeList(props: IProps) {\n  const [nodes, setNodes] = useNode();\n  const classes = useStyles();\n\n  return (\n    nodes.map((node: { nodeId: any; nodeName: any; nodeNetwork: any, version: any, sync: any, clientversion: any }, index: any) => (\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <Paper className={classes.paper} key={index} id={index}>\n              Node Name: {node.nodeName}<br />\n              Node Container ID: {node.nodeId} <br />\n              Node Network: {node.nodeNetwork}<br />\n              Net version : {node.version}<br />\n              Client Version: {node.clientversion}<br />\n              Syncing: {node.sync && node.sync !== \"false\" ? <>CurrentBlock: {node.sync.currentBlock}</> : node.sync}<br />\n              <Button variant=\"contained\" onClick={() => props.removeNodes(node.nodeId, node.nodeName, true)}>Remove Node</Button>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    )));\n}\n\nexport default NodeList;\n","import React, { useState } from \"react\";\nimport { useUsername } from \"../stores/useCredsStore\";\nimport { useNode } from \"../stores/useNodesStore\";\nimport { useToken } from \"../stores/useTokenStore\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\ninterface IProps {\n  addNode: any;\n  getNodes: any;\n  testNode: any;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nexport default function NewNodeModal(props: IProps) {\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      paper: {\n        position: \"absolute\",\n        width: 600,\n        backgroundColor: theme.palette.background.paper,\n        border: \"2px solid #000\",\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 4),\n      },\n      formMultiGeth: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n        display: showMultiGeth,\n      },\n      submit: {\n        margin: theme.spacing(3, 0, 2),\n      },\n      clientButton: {\n        margin: \"3px\",\n      },\n      networkButton: {\n        margin: \"3px\",\n      },\n    }),\n  );\n\n  // enUI hooks\n  const [username, setUsername] = useUsername();\n  const [nodeName, setNodeName] = useState();\n  const [nodes, setNodes] = useNode();\n  const [token, setToken] = useToken();\n  const [result, setResult] = useState();\n  const [error, setError] = useState();\n  // Form HOoks\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [showMultiGeth, setMultiGeth] = useState(\"none\");\n  const [checkBox, setCheckBox] = useState({\n    rpc: false,\n    websocket: false,\n  });\n  const [radioValue, setRadioValue] = useState(\"classic\");\n\n  const handleOpenModal = () => {\n    setOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n\n  const handleCheckBox = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCheckBox({ ...checkBox, [name]: event.target.checked });\n    console.log(\"rpc \" + checkBox.rpc);\n    console.log(\"ws \" + checkBox.websocket);\n  };\n  function handleRadioChange(event: React.ChangeEvent<unknown>) {\n    setRadioValue((event.target as HTMLInputElement).value);\n  }\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={handleOpenModal}\n      >\n        Add Node\n      </button>\n      <Modal\n        aria-labelledby=\"Add Node\"\n        aria-describedby=\"Spin up a Ethereum Node\"\n        open={open}\n        onClose={handleCloseModal}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <h2 id=\"simple-modal-title\">Spin up a Ethereum Node Client</h2>\n\n          <Container fixed>\n            <div style={{ borderBottom: \"1px solid #000000\" }}>\n              <h3>Select Node Client</h3>\n              <Button\n                className={classes.clientButton}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => setMultiGeth(\"\")}\n              >\n                Multi-Geth\n              </Button>\n              <Button\n                className={classes.clientButton}\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={true}\n                onClick={() => setMultiGeth(\"\")}\n              >\n                Parity\n              </Button>\n              <Button\n                className={classes.clientButton}\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={true}\n                onClick={() => setMultiGeth(\"\")}\n              >\n                Classic Geth\n              </Button>\n              <Button\n                className={classes.clientButton}\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={true}\n                onClick={() => setMultiGeth(\"\")}\n              >\n                Mantis\n              </Button>\n            </div>\n\n            <form className={classes.formMultiGeth} noValidate>\n              <h4>Multi-Geth Select Network</h4>\n              <RadioGroup aria-label=\"position\" name=\"position\" value={radioValue} onChange={handleRadioChange} row>\n                <FormControlLabel\n                  value=\"classic\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"ETC\"\n                  labelPlacement=\"top\"\n                />\n                <FormControlLabel\n                  value=\"kotti\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"Kotti\"\n                  labelPlacement=\"top\"\n                />\n              </RadioGroup>\n              <h4>Enable JSON-RPC</h4>\n              <FormControlLabel\n                control={<Checkbox checked={checkBox.rpc} onChange={handleCheckBox(\"rpc\")} value=\"false\" />}\n                label=\"Enable RPC http\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={checkBox.websocket} onChange={handleCheckBox(\"websocket\")} value=\"false\" />}\n                label=\"Enable RPC WS\"\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                autoFocus\n                name=\"nodename\"\n                id=\"nodename\"\n                label=\"Node Name\"\n                placeholder=\"Node Name\"\n                value={nodeName}\n                onChange={(event) => setNodeName(event.target.value)}\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={() => { props.addNode(nodeName, radioValue, \"fast\", checkBox.rpc, checkBox.websocket); }}\n              >\n                Create Node\n                </Button>\n            </form>\n            {error && <div>{error}</div>}\n          </Container>\n        </div>\n      </Modal>\n    </div >\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { useUsername } from \"../stores/useCredsStore\";\nimport { useNode } from \"../stores/useNodesStore\";\nimport { useToken } from \"../stores/useTokenStore\";\nimport { EnAPIhttp } from \"../api/EnApi\";\nimport { NavigationBar } from \"../components/navigationComponent\";\nimport NodeList from \"../components/nodeComponents\";\nimport NodeModal from \"./NodeModal\";\n\ninterface IProps {\n  history: any;\n}\n\nconst NodesPage: React.FC<IProps> = (props) => {\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      root: {\n        flexGrow: 1,\n      },\n    }),\n  );\n\n  const [username, setUsername] = useUsername();\n  const [nodes, setNodes] = useNode();\n  const [token, setToken] = useToken();\n  const [mounted, setMounted] = useState(true);\n  const [result, setResult] = useState();\n  const classes = useStyles();\n\n  useEffect(() => {\n    console.log(nodes);\n    getNodes();\n    if (nodes.length === 0) { return; }\n  }, [mounted && nodes]);\n\n  function testNode() {\n    console.log(\"hello from modal\");\n  }\n\n  async function addNode(nodeName: string, nodeNetwork: string, syncType: string, enableRpc: boolean, enableWS: boolean) {\n    const addNodeResult = await EnAPIhttp.addNode(token, username, nodeName, nodeNetwork, syncType, enableRpc, enableWS);\n    console.log(addNodeResult);\n    if (addNodeResult && addNodeResult.status === \"success\") {\n      const getUserInfo = await EnAPIhttp.getUser(token, username);\n      setNodes(getUserInfo.nodes);\n      setMounted(false);\n      // props.history.go(\"/nodes\");\n    } else {\n      console.log(addNodeResult.message);\n      setResult(addNodeResult.message);\n    }\n  }\n\n  async function removeNodes(containerId: string, nodeName: string, removeData: boolean) {\n    const removeNodeResult = await EnAPIhttp.removeNode(token, username, containerId, nodeName, removeData);\n    if (removeNodeResult && removeNodeResult.status === \"success\") {\n      const getUserInfo = await EnAPIhttp.getUser(token, username);\n      setNodes(getUserInfo.nodes);\n      setMounted(false);\n      props.history.go(\"/nodes\");\n    } else {\n      console.log(removeNodeResult.message);\n      setResult(removeNodeResult.message);\n    }\n  }\n\n  const getNodes = () => {\n    EnAPIhttp.getUser(token, username).then((userInfoResult) => {\n      setNodes(userInfoResult.nodes);\n      if (userInfoResult.nodes.length === 0) { setMounted(false); }\n      nodes.map((node: any, index: any) => {\n        EnAPIhttp.ethRpcCall(username, node.nodeName, node.nodeNetwork, \"net_version\", [], 67).then((versionResult) => {\n          // tslint:disable-next-line: no-string-literal\n          node.version = versionResult.result;\n          setNodes(nodes);\n        });\n        EnAPIhttp.ethRpcCall(username, node.nodeName, node.nodeNetwork, \"eth_syncing\", [], 67).then((syncResult) => {\n          if (syncResult.result !== false) {\n            // tslint:disable-next-line: no-string-literal\n            node.sync = syncResult.result;\n            setNodes(nodes);\n          } else {\n            node.sync = \"false\";\n            setNodes(nodes);\n          }\n          setMounted(false);\n        });\n        EnAPIhttp.ethRpcCall(username, node.nodeName, node.nodeNetwork, \"web3_clientVersion\", [], 67).then((clientVersionResult) => {\n          // tslint:disable-next-line: no-string-literal\n          node.clientversion = clientVersionResult.result;\n          setNodes(nodes);\n        });\n      });\n    });\n  };\n\n  return (\n    <div className={classes.root} >\n      <NavigationBar title={\"Nodes - Hello \" + username + \" these are your running nodes: \"} />\n      {nodes ? <NodeList removeNodes={removeNodes} /> : < div > Loading Nodes</div>}\n      <NodeModal addNode={addNode} getNodes={getNodes} testNode={testNode} />\n      {result && <div>{result}</div>}\n    </div>\n  );\n};\nexport default NodesPage;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ReusableProvider } from \"reusable\";\nimport LoginPage from \"./containers/LoginPage\";\nimport RegisterPage from \"./containers/RegisterPage\";\nimport MainPage from \"./containers/MainPage\";\nimport NodesPage from \"./containers/NodesPage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst routing = (\n  <ReusableProvider>\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={MainPage} />\n        <Route path=\"/login\" component={LoginPage} />\n        <Route path=\"/register\" component={RegisterPage} />\n        <Route path=\"/nodes\" component={NodesPage} />\n      </Switch>\n    </Router>\n  </ReusableProvider>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n"],"sourceRoot":""}